# Generated by Django 4.2.20 on 2025-07-10 16:39

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('allifmaalcommonapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdmissionsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, help_text='Type of referral (Internal or External).', max_length=50, null=True)),
                ('date_time', models.DateTimeField(auto_now_add=True, help_text='Date and time of patient admission.', null=True)),
                ('reason_for_admission', models.TextField(blank=True, help_text='The primary reason for patient admission.', max_length=250, null=True)),
                ('status', models.CharField(choices=[('ADM', 'Admitted'), ('DIS', 'Discharged'), ('TRANS', 'Transferred'), ('AWD', 'Absconded Without Discharge')], default='ADM', help_text='Current status of the admission (e.g., Admitted, Discharged).', max_length=100)),
                ('admission_date_time', models.DateTimeField(blank=True, help_text='Date and time of patient discharge (if applicable).', null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='AssessmentsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record_date', models.DateField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('complaints', models.TextField(blank=True, help_text="Patient's main symptoms or reason for visit.", null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=1, default=0, max_digits=10, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, help_text="Patient's height in centimeters.", max_digits=10, null=True)),
                ('blood_pressure_systolic', models.IntegerField(blank=True, help_text='Systolic blood pressure (mmHg).', null=True)),
                ('blood_pressure_diastolic', models.IntegerField(blank=True, help_text='Diastolic blood pressure (mmHg).', null=True)),
                ('temperature', models.DecimalField(blank=True, decimal_places=2, help_text="Patient's temperature in Celsius.", max_digits=4, null=True)),
                ('pulse_rate', models.IntegerField(blank=True, help_text="Patient's pulse rate (beats per minute).", null=True)),
                ('respiration_rate', models.IntegerField(blank=True, help_text="Patient's respiration rate (breaths per minute).", null=True)),
                ('oxygen_saturation', models.DecimalField(blank=True, decimal_places=1, help_text="Patient's oxygen saturation (SpO2 %).", max_digits=4, null=True)),
                ('past_medical_history', models.TextField(blank=True, help_text='Relevant past medical history provided by the patient.', null=True)),
                ('known_chronic_conditions', models.TextField(blank=True, help_text="Patient's reported chronic conditions at triage.", null=True)),
                ('current_medication', models.TextField(blank=True, help_text='Medications patient is currently taking, reported at triage.', null=True)),
                ('treatment_plan', models.TextField(blank=True, help_text='Treatment plan (medications, tests, referrals, follow-up).', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DischargesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discharge_summary', models.CharField(blank=True, max_length=250, null=True)),
                ('discharge_diagnosis', models.CharField(blank=True, max_length=250, null=True)),
                ('medications_at_discharge', models.CharField(blank=True, max_length=250, null=True)),
                ('follow_up_plan', models.CharField(blank=True, max_length=250, null=True)),
                ('recorded_on', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LabTestRequestsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, help_text='Type of referral (Internal or External).', max_length=50, null=True)),
                ('date_time', models.DateTimeField(blank=True, help_text='Date and time of patient admission.', null=True)),
                ('status', models.CharField(choices=[('Ordered', 'Ordered'), ('Collected', 'Sample Collected'), ('Processing', 'Under Processing'), ('Completed', 'Completed'), ('Validated', 'Validated'), ('Resulted', 'Results Available'), ('Pending', 'Pending Collection'), ('Cancelled', 'Cancelled'), ('Lost', 'Lost')], default='Pending', help_text='Current status of the lab order.', max_length=50)),
                ('priority', models.CharField(choices=[('Normal', 'Normal'), ('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low'), ('Urgent', 'Urgent')], default='Pending', help_text='Current status of the lab order.', max_length=50)),
                ('specimen', models.CharField(choices=[('Blood', 'Blood'), ('Urine', 'Urine'), ('Tissue', 'Tissue'), ('Saliva', 'Saliva'), ('Stool', 'Stool'), ('Other', 'Other')], default='Blood', help_text='Current status of the lab order.', max_length=50)),
                ('comments', models.TextField(blank=True, help_text='Additional instructions or clinical notes for the laboratory.', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LabTestResultsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('results', models.CharField(blank=True, default='Results', max_length=50, null=True)),
                ('description', models.CharField(blank=True, default='Results', max_length=50, null=True)),
                ('date_time', models.DateTimeField(blank=True, help_text='Date and time of patient admission.', null=True)),
                ('comments', models.TextField(blank=True, help_text='Additional instructions or clinical notes for the laboratory.', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MedicalAdministrationsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dosage_value', models.DecimalField(blank=True, decimal_places=2, help_text="The actual dosage administered (e.g., '500').", max_digits=10, null=True)),
                ('dosage_unit', models.CharField(blank=True, choices=[('MG', 'Milligrams'), ('G', 'Grams'), ('ML', 'Milliliters'), ('UNIT', 'Units'), ('PIECE', 'Pieces'), ('DROP', 'Drops'), ('MCG', 'Micrograms')], help_text="The unit of the administered dosage (e.g., 'MG', 'ML').", max_length=10, null=True)),
                ('via', models.CharField(blank=True, choices=[('ORAL', 'Oral'), ('IM', 'Intramuscular Injection'), ('IV', 'Intravenous Injection'), ('INHAL', 'Inhalation'), ('TOPIC', 'Topical'), ('SUBQ', 'Subcutaneous')], help_text='The route by which the medication was administered.', max_length=10, null=True)),
                ('comments', models.TextField(blank=True, help_text='Any additional comments about the administration.', null=True)),
                ('administration_date_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('given_on', models.DateTimeField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MedicationsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dosage_form', models.CharField(blank=True, choices=[('TAB', 'Tablet'), ('SYR', 'Syrup'), ('CAP', 'Capsule'), ('INJ', 'Injection'), ('CREAM', 'Cream'), ('DROPS', 'Drops'), ('OTH', 'Other')], default='Please select', help_text='Formulation of the drug (e.g., Tablet, Syrup, Injection).', max_length=200, null=True)),
                ('dosage', models.CharField(blank=True, choices=[('MG', 'Milligrams'), ('G', 'Grams'), ('ML', 'Milliliters'), ('UNIT', 'Units'), ('PIECE', 'Pieces'), ('DROP', 'Drops'), ('MCG', 'Micrograms')], help_text="Dosage amount and unit (e.g., '500mg', '10ml').", max_length=250, null=True)),
                ('via', models.CharField(blank=True, choices=[('ORAL', 'Oral'), ('IM', 'Intramuscular Injection'), ('IV', 'Intravenous Injection'), ('INHAL', 'Inhalation'), ('TOPIC', 'Topical'), ('SUBQ', 'Subcutaneous')], default='ORAL', help_text='How the medication should be administered (e.g., Oral, IV, IM).', max_length=250, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=1, default=0, max_digits=30, null=True)),
                ('is_issued', models.BooleanField(default=False, help_text='True if the prescription has been dispensed by the pharmacy.', max_length=50)),
                ('frequency', models.CharField(blank=True, max_length=350, null=True)),
                ('duration', models.CharField(blank=True, max_length=350, null=True)),
                ('instructions', models.TextField(blank=True, help_text='Patient-specific instructions for medication use.', null=True)),
                ('issued_date_time', models.DateTimeField(blank=True, help_text='Date and time when the prescription was dispensed.', null=True)),
                ('prescription_date_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReferralsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason_for_referral', models.CharField(blank=True, help_text='The reason for the referral.', max_length=250, null=True)),
                ('referred_on', models.DateField(blank=True, null=True)),
                ('referral_type', models.CharField(choices=[('INT', 'Internal'), ('EXT', 'External')], default='INT', help_text='Type of referral (Internal or External).', max_length=10)),
                ('status', models.CharField(choices=[('PEND', 'Pending'), ('ACC', 'Accepted'), ('REJ', 'Rejected'), ('COMP', 'Completed')], default='PEND', help_text='Current status of the referral.', max_length=10)),
                ('referral_date_time', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TriagesModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='Name', max_length=50, null=True)),
                ('number', models.CharField(blank=True, default='#No', help_text='Unique code for the program, e.g., BSCIT', max_length=50, null=True)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('description', models.TextField(blank=True, default='Description', null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('comments', models.TextField(blank=True, default='Comments', null=True)),
                ('starts', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('ends', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('code', models.CharField(blank=True, default='Code', help_text='Unique code for the program, e.g., BSCIT', max_length=50, null=True)),
                ('balance', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=30, null=True)),
                ('status', models.CharField(blank=True, choices=[('Draft', 'Draft'), ('Active', 'Active'), ('Pending', 'Pending'), ('Approved', 'Approved'), ('Archived', 'Archived')], default='Active', max_length=50, null=True)),
                ('priority', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low'), ('Urgent', 'Urgent')], default='Normal', max_length=50, null=True)),
                ('delete_status', models.CharField(blank=True, choices=[('Undeletable', 'Undeletable'), ('Deletable', 'Deletable')], default='Deletable', max_length=30, null=True)),
                ('uuid', models.UUIDField(blank=True, db_index=True, default=uuid.uuid4, editable=False, null=True, unique=True)),
                ('reference', models.CharField(blank=True, db_index=True, default='reference', help_text='An optional identifier from an external system or an internal reference code.', max_length=100, null=True)),
                ('complaints', models.TextField(blank=True, help_text="Patient's main symptoms or reason for visit.", null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=1, max_digits=10, null=True)),
                ('height', models.DecimalField(blank=True, decimal_places=2, help_text="Patient's height in centimeters.", max_digits=10, null=True)),
                ('blood_pressure_systolic', models.IntegerField(blank=True, help_text='Systolic blood pressure (mmHg).', null=True)),
                ('blood_pressure_diastolic', models.IntegerField(blank=True, help_text='Diastolic blood pressure (mmHg).', null=True)),
                ('temperature', models.DecimalField(blank=True, decimal_places=2, help_text="Patient's temperature in Celsius.", max_digits=4, null=True)),
                ('pulse_rate', models.IntegerField(blank=True, help_text="Patient's pulse rate (beats per minute).", null=True)),
                ('respiration_rate', models.IntegerField(blank=True, help_text="Patient's respiration rate (breaths per minute).", null=True)),
                ('oxygen_saturation', models.DecimalField(blank=True, decimal_places=1, help_text="Patient's oxygen saturation (SpO2 %).", max_digits=4, null=True)),
                ('past_medical_history', models.TextField(blank=True, help_text='Relevant past medical history provided by the patient.', null=True)),
                ('known_chronic_conditions', models.TextField(blank=True, help_text="Patient's reported chronic conditions at triage.", null=True)),
                ('current_medication', models.TextField(blank=True, help_text='Medications patient is currently taking, reported at triage.', null=True)),
                ('treatment_plan', models.TextField(blank=True, help_text='Treatment plan (medications, tests, referrals, follow-up).', null=True)),
                ('pain_level', models.IntegerField(blank=True, choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], help_text="Patient's reported pain level (0-10, 0=no pain, 10=worst pain).", null=True)),
                ('allergies', models.TextField(blank=True, help_text="Patient's reported allergies (e.g., medications, food, environmental).", null=True)),
                ('triage_disposition', models.CharField(blank=True, choices=[('Emergency', 'Emergency/Critical Care'), ('Urgent', 'Urgent Care'), ('Normal', 'Normal'), ('Referral', 'Referral to Specialist'), ('Discharge', 'Discharge'), ('Admit', 'Admission')], help_text='Triage decision or immediate disposition of the patient.', max_length=50, null=True)),
                ('disposition_notes', models.TextField(blank=True, help_text='Detailed notes on the triage disposition.', null=True)),
                ('triage_level', models.IntegerField(blank=True, choices=[(1, 'Resuscitation'), (2, 'Emergency'), (3, 'Urgent'), (4, 'Normal')], help_text='Assigned triage urgency level (e.g., ESI level 1-5).', null=True)),
                ('mode_of_arrival', models.CharField(blank=True, choices=[('Ambulance', 'Ambulance'), ('Walk-in', 'Walk-in'), ('Vehicle', 'Vehicle'), ('Aeroplane', 'Aeroplane'), ('Wheelchair', 'Wheelchair'), ('Police', 'Police'), ('Stretcher', 'Stretcher'), ('Other', 'Other')], max_length=50, null=True)),
                ('mobility_status', models.CharField(blank=True, choices=[('Walking', 'Walking'), ('Assisted', 'Assisted'), ('Wheelchair', 'Wheelchaired'), ('Stretcher', 'Stretcher')], max_length=50, null=True)),
                ('mental_status', models.CharField(blank=True, choices=[('Alert', 'Alert and Aware'), ('Disoriented', 'Disoriented'), ('Drowsy', 'Drowsy'), ('Responds_to_voice', 'Responds to Voice'), ('Responds_to_pain', 'Responds to Pain'), ('Agitated', 'Agitated / Restless'), ('Combative', 'Combative / Aggressive'), ('Withdrawn', 'Withdrawn / Very Quiet'), ('Unresponsive', 'Completely Unresponsive'), ('Other', 'Other')], max_length=50, null=True)),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='allifmaalcommonapp.commonbranchesmodel')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='allifmaalcommonapp.commoncompanydetailsmodel')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='allifmaalcommonapp.commondepartmentsmodel')),
                ('division', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='allifmaalcommonapp.commondivisionsmodel')),
                ('medical_file', models.ForeignKey(blank=True, help_text='The customer associated with this encounter.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='filetranige', to='allifmaalcommonapp.commontransactionsmodel')),
                ('operation_term', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='allifmaalcommonapp.commonoperationyeartermsmodel')),
                ('operation_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='allifmaalcommonapp.commonoperationyearsmodel')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
