# Generated by Django 4.2.20 on 2025-05-28 15:10

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChartOfAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account_type', models.CharField(choices=[('Asset', 'Asset'), ('Liability', 'Liability'), ('Equity', 'Equity'), ('Revenue', 'Revenue'), ('Expense', 'Expense')], max_length=50)),
                ('account_number', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['account_number'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(help_text='Unique identifier for URL or identification', max_length=255, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='JournalEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entry_date', models.DateField(default=django.utils.timezone.now)),
                ('narration', models.TextField()),
                ('status', models.CharField(default='Balanced', max_length=50)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='testapp.company')),
            ],
            options={
                'verbose_name_plural': 'Journal Entries',
                'ordering': ['-entry_date', '-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('code', models.CharField(help_text='Unique code for the location', max_length=50, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='testapp.company')),
                ('inventory_asset_account', models.ForeignKey(help_text='The Chart of Account for inventory held at this location (e.g., 11301 Inventory - Main Warehouse)', on_delete=django.db.models.deletion.PROTECT, related_name='location_inventory_assets', to='testapp.chartofaccount')),
            ],
            options={
                'abstract': False,
                'unique_together': {('company', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('sku', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('cogs_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_cogs_items', to='testapp.chartofaccount')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='testapp.company')),
                ('inventory_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_inventory_items', to='testapp.chartofaccount')),
                ('sales_account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='product_sales_items', to='testapp.chartofaccount')),
            ],
            options={
                'abstract': False,
                'unique_together': {('company', 'sku')},
            },
        ),
        migrations.CreateModel(
            name='TransferOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('order_number', models.CharField(max_length=100, unique=True)),
                ('order_date', models.DateField(default=django.utils.timezone.now)),
                ('expected_delivery_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Pending Approval', 'Pending Approval'), ('Approved', 'Approved'), ('Issued', 'Issued (GIN Created)'), ('Received', 'Received (GRN Created)'), ('Cancelled', 'Cancelled')], default='Draft', max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='testapp.company')),
                ('destination_location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='incoming_transfer_orders', to='testapp.location')),
                ('initiated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='initiated_transfer_orders', to=settings.AUTH_USER_MODEL)),
                ('source_location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='outgoing_transfer_orders', to='testapp.location')),
            ],
            options={
                'ordering': ['-order_date', '-created_at'],
                'abstract': False,
                'unique_together': {('company', 'order_number')},
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transaction_date', models.DateField(default=django.utils.timezone.now)),
                ('description', models.TextField()),
                ('reference_number', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(default='Posted', max_length=50)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='testapp.company')),
            ],
            options={
                'ordering': ['-transaction_date'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JournalEntryLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('debit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('credit', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='journal_entry_lines', to='testapp.chartofaccount')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='testapp.company')),
                ('journal_entry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='testapp.journalentry')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='journalentry',
            name='transaction',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='journal_entry', to='testapp.transaction'),
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('unit_cost', models.DecimalField(decimal_places=4, default=Decimal('0.00'), max_digits=15)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='testapp.company')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stock_at_location', to='testapp.location')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventory_records', to='testapp.product')),
            ],
            options={
                'verbose_name_plural': 'Inventories',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsReceiptNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('grn_number', models.CharField(max_length=100, unique=True)),
                ('receipt_date', models.DateField(default=django.utils.timezone.now)),
                ('description', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='testapp.company')),
                ('journal_entry', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grn', to='testapp.journalentry')),
                ('received_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='grns_received', to=settings.AUTH_USER_MODEL)),
                ('transfer_order', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='goods_receipt_note', to='testapp.transferorder')),
            ],
            options={
                'ordering': ['-receipt_date', '-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GoodsIssueNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('gin_number', models.CharField(max_length=100, unique=True)),
                ('issue_date', models.DateField(default=django.utils.timezone.now)),
                ('description', models.TextField(blank=True, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='testapp.company')),
                ('issued_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='gins_issued', to=settings.AUTH_USER_MODEL)),
                ('journal_entry', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gin', to='testapp.journalentry')),
                ('transfer_order', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='goods_issue_note', to='testapp.transferorder')),
            ],
            options={
                'ordering': ['-issue_date', '-created_at'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='chartofaccount',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='testapp.company'),
        ),
        migrations.AddField(
            model_name='chartofaccount',
            name='parent_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_accounts', to='testapp.chartofaccount'),
        ),
        migrations.CreateModel(
            name='TransferOrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=15)),
                ('transferred_unit_cost', models.DecimalField(decimal_places=4, default=Decimal('0.00'), max_digits=15)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)ss', to='testapp.company')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='testapp.product')),
                ('transfer_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='testapp.transferorder')),
            ],
            options={
                'abstract': False,
                'unique_together': {('company', 'transfer_order', 'product')},
            },
        ),
        migrations.AddConstraint(
            model_name='journalentryline',
            constraint=models.CheckConstraint(check=models.Q(models.Q(('credit', 0), ('debit__gt', 0)), models.Q(('credit__gt', 0), ('debit', 0)), _connector='OR'), name='debit_xor_credit'),
        ),
        migrations.AlterUniqueTogether(
            name='inventory',
            unique_together={('company', 'product', 'location')},
        ),
        migrations.AlterUniqueTogether(
            name='goodsreceiptnote',
            unique_together={('company', 'grn_number')},
        ),
        migrations.AlterUniqueTogether(
            name='goodsissuenote',
            unique_together={('company', 'gin_number')},
        ),
        migrations.AlterUniqueTogether(
            name='chartofaccount',
            unique_together={('company', 'account_number')},
        ),
    ]
